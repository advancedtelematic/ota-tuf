[{
  "id": "${DEPLOY_ENV}/${REPOSERVER_JOB_NAME}",
  "uris": ["/root/docker.tar.gz"],
  "constraints": [["rack_id", "CLUSTER", "$MARATHON_CONSTRAINTS"]],
  "cpus": 0.2,
  "mem": 1048,
  "instances": 1,
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "advancedtelematic/tuf-reposerver:${DOCKER_TAG}",
      "parameters": [{"key": "log-driver", "value": "syslog"},
                     {"key": "log-opt", "value": "tag=${REPOSERVER_SERVICE_NAME}"}],
      "forcePullImage": true,
      "network": "BRIDGE",
      "portMappings": [{
        "containerPort": 9001,
        "hostPort": 0,
        "protocol": "tcp"
      }]
    }
  },
  "env": {
    "AUTHPLUS_CLIENT_ID": "${AUTHPLUS_CLIENT_ID}",
    "AUTHPLUS_CLIENT_SECRET": "${AUTHPLUS_CLIENT_SECRET}",
    "AUTH_PLUS_HOST": "${AUTH_PLUS_HOST}",
    "AUTH_PLUS_PORT": "${AUTH_PLUS_PORT}",
    "AUTH_PLUS_SCHEME": "https",
    "AUTH_PROTOCOL": "none",
    "AUTH_VERIFICATION": "auth-plus",
    "BIND_PORT": "9001",
    "DB_MIGRATE": "true",
    "DB_PASSWORD": "${REPOSERVER_DB_PASSWORD}",
    "DB_URL": "${REPOSERVER_DB_URL}",
    "DB_USER": "${REPOSERVER_DB_USER}",
    "JAVA_OPTS": "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap",
    "KAFKA_BOOTSTRAP_SERVERS": "${KAFKA_BOOTSTRAP_SERVERS}",
    "KAFKA_HOST": "${KAFKA_HOST}",
    "KAFKA_TOPIC_SUFFIX": "${KAFKA_TOPIC_SUFFIX}",
    "SERVICE_NAME": "${REPOSERVER_SERVICE_NAME}",
    "SERVICE_SCOPE": "internal",
    "SERVICE_TYPE": "http",
    "SERVICE_IMAGE": "advancedtelematic/tuf-reposerver:${DOCKER_TAG}",
    "SERVICE_HEALTH_CHECK": "curl --show-error --silent %<host>s:%<port>s/health",
    "TUF_KEYSERVER_HOST": "${TUF_KEYSERVER_HOST}",
    "TUF_KEYSERVER_PORT": "${TUF_KEYSERVER_PORT}",
    "TUF_REPOSERVER_AWS_ACCESS_KEY": "${TUF_REPOSERVER_AWS_ACCESS_KEY}",
    "TUF_REPOSERVER_AWS_BUCKET_ID": "${TUF_REPOSERVER_AWS_BUCKET_ID}",
    "TUF_REPOSERVER_AWS_REGION": "${TUF_REPOSERVER_AWS_REGION}",
    "TUF_REPOSERVER_AWS_SECRET_KEY": "${TUF_REPOSERVER_AWS_SECRET_KEY}",
    "INFLUXDB_HOST": "${INFLUXDB_HOST}",
    "INFLUXDB_PORT": "${INFLUXDB_PORT}"
  },
  "healthChecks": [{
    "protocol": "HTTP",
    "path": "/health",
    "intervalSeconds": 30
  }],
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0,
    "expungeAfterSeconds": 0
  }
},
{
  "id": "${DEPLOY_ENV}/${REPOSERVER_JOB_NAME}-pub",
  "uris": ["/root/docker.tar.gz"],
  "constraints": [["rack_id", "CLUSTER", "$MARATHON_CONSTRAINTS"]],
  "cpus": 0.2,
  "mem": 1048,
  "instances": 1,
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "advancedtelematic/tuf-reposerver:${DOCKER_TAG}",
      "parameters": [{"key": "log-driver", "value": "syslog"},
                     {"key": "log-opt", "value": "tag=${REPOSERVER_SERVICE_NAME_PUB}"}],
      "forcePullImage": true,
      "network": "BRIDGE",
      "portMappings": [{
        "containerPort": 9001,
        "hostPort": 0,
        "protocol": "tcp"
      }]
    }
  },
  "env": {
    "AUTHPLUS_CLIENT_ID": "${AUTHPLUS_CLIENT_ID}",
    "AUTHPLUS_CLIENT_SECRET": "${AUTHPLUS_CLIENT_SECRET}",
    "AUTH_PLUS_HOST": "${AUTH_PLUS_HOST}",
    "AUTH_PLUS_PORT": "${AUTH_PLUS_PORT}",
    "AUTH_PLUS_SCHEME": "https",
    "AUTH_PROTOCOL": "oauth.accesstoken",
    "AUTH_VERIFICATION": "auth-plus",
    "BIND_PORT": "9001",
    "DB_MIGRATE": "true",
    "DB_PASSWORD": "${REPOSERVER_DB_PASSWORD}",
    "DB_URL": "${REPOSERVER_DB_URL}",
    "DB_USER": "${REPOSERVER_DB_USER}",
    "JAVA_OPTS": "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap",
    "KAFKA_BOOTSTRAP_SERVERS": "${KAFKA_BOOTSTRAP_SERVERS}",
    "KAFKA_HOST": "${KAFKA_HOST}",
    "KAFKA_TOPIC_SUFFIX": "${KAFKA_TOPIC_SUFFIX}",
    "SERVICE_IMAGE": "advancedtelematic/tuf-reposerver:${DOCKER_TAG}",
    "SERVICE_NAME": "${REPOSERVER_SERVICE_NAME_PUB}",
    "SERVICE_SCOPE": "public",
    "SERVICE_TYPE": "http",
    "SERVICE_HEALTH_CHECK": "curl --show-error --silent %<host>s:%<port>s/health",
    "TUF_KEYSERVER_HOST": "${TUF_KEYSERVER_HOST}",
    "TUF_KEYSERVER_PORT": "${TUF_KEYSERVER_PORT}",
    "TUF_REPOSERVER_AWS_ACCESS_KEY": "${TUF_REPOSERVER_AWS_ACCESS_KEY}",
    "TUF_REPOSERVER_AWS_BUCKET_ID": "${TUF_REPOSERVER_AWS_BUCKET_ID}",
    "TUF_REPOSERVER_AWS_REGION": "${TUF_REPOSERVER_AWS_REGION}",
    "TUF_REPOSERVER_AWS_SECRET_KEY": "${TUF_REPOSERVER_AWS_SECRET_KEY}",
    "INFLUXDB_HOST": "${INFLUXDB_HOST}",
    "INFLUXDB_PORT": "${INFLUXDB_PORT}"
  },
  "healthChecks": [{
    "protocol": "HTTP",
    "path": "/health",
    "intervalSeconds": 30
  }],
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0,
    "expungeAfterSeconds": 0
  }
},
{
  "id": "${DEPLOY_ENV}/${KEYSERVER_JOB_NAME}",
  "uris": ["/root/docker.tar.gz"],
  "constraints": [["rack_id", "CLUSTER", "$MARATHON_CONSTRAINTS"]],
  "cpus": 0.2,
  "mem": 1048,
  "instances": 1,
  "args": ["-main", "com.advancedtelematic.tuf.keyserver.Boot"],
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "advancedtelematic/tuf-keyserver:${DOCKER_TAG}",
      "parameters": [{"key": "log-driver", "value": "syslog"},
                     {"key": "log-opt", "value": "tag=${KEYSERVER_SERVICE_NAME}"}],
      "forcePullImage": true,
      "network": "BRIDGE",
      "portMappings": [{
        "containerPort": 9001,
        "hostPort": 0,
        "protocol": "tcp"
      }]
    }
  },
  "env": {
    "BIND_PORT": "9001",
    "DB_MIGRATE": "true",
    "DB_PASSWORD": "${KEYSERVER_DB_PASSWORD}",
    "DB_URL": "${KEYSERVER_DB_URL}",
    "DB_USER": "${KEYSERVER_DB_USER}",
    "JAVA_OPTS": "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap",
    "KAFKA_BOOTSTRAP_SERVERS": "${KAFKA_BOOTSTRAP_SERVERS}",
    "KAFKA_HOST": "${KAFKA_HOST}",
    "KAFKA_TOPIC_SUFFIX": "${KAFKA_TOPIC_SUFFIX}",
    "SERVICE_NAME": "${KEYSERVER_SERVICE_NAME}",
    "SERVICE_SCOPE": "internal",
    "SERVICE_TYPE": "http",
    "SERVICE_IMAGE": "advancedtelematic/tuf-keyserver:${DOCKER_TAG}",
    "SERVICE_HEALTH_CHECK": "curl --show-error --silent %<host>s:%<port>s/health",
    "TUF_VAULT_HOST": "${TUF_VAULT_HOST}",
    "TUF_VAULT_PORT": "${TUF_VAULT_PORT}",
    "TUF_VAULT_TOKEN": "${TUF_VAULT_TOKEN}",
    "INFLUXDB_HOST": "${INFLUXDB_HOST}",
    "INFLUXDB_PORT": "${INFLUXDB_PORT}"
  },
  "healthChecks": [{
    "protocol": "HTTP",
    "path": "/health",
    "intervalSeconds": 30
  }],
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0,
    "expungeAfterSeconds": 0
  }
},
{
  "id": "${DEPLOY_ENV}/${KEYSERVER_JOB_NAME}-daemon",
  "uris": ["/root/docker.tar.gz"],
  "constraints": [["rack_id", "CLUSTER", "$MARATHON_CONSTRAINTS"]],
  "cpus": 0.2,
  "mem": 1048,
  "instances": 1,
  "args": ["-main", "com.advancedtelematic.tuf.keyserver.daemon.KeyGenerationDaemon"],
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "advancedtelematic/tuf-keyserver:${DOCKER_TAG}",
      "parameters": [{"key": "log-driver", "value": "syslog"},
                     {"key": "log-opt", "value": "tag=${KEYSERVER_SERVICE_NAME}-daemon"}],
      "forcePullImage": true,
      "network": "BRIDGE",
      "portMappings": [{
        "containerPort": 9001,
        "hostPort": 0,
        "protocol": "tcp"
      }]
    }
  },
  "env": {
    "BIND_PORT": "9001",
    "DB_MIGRATE": "true",
    "DB_PASSWORD": "${KEYSERVER_DB_PASSWORD}",
    "DB_URL": "${KEYSERVER_DB_URL}",
    "DB_USER": "${KEYSERVER_DB_USER}",
    "JAVA_OPTS": "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap",
    "KAFKA_BOOTSTRAP_SERVERS": "${KAFKA_BOOTSTRAP_SERVERS}",
    "KAFKA_HOST": "${KAFKA_HOST}",
    "KAFKA_TOPIC_SUFFIX": "${KAFKA_TOPIC_SUFFIX}",
    "SERVICE_NAME": "${KEYSERVER_SERVICE_NAME}-daemon",
    "SERVICE_SCOPE": "internal",
    "SERVICE_TYPE": "http",
    "SERVICE_IMAGE": "advancedtelematic/tuf-keyserver:${DOCKER_TAG}",
    "SERVICE_HEALTH_CHECK": "curl --show-error --silent %<host>s:%<port>s/health",
    "TUF_VAULT_HOST": "${TUF_VAULT_HOST}",
    "TUF_VAULT_PORT": "${TUF_VAULT_PORT}",
    "TUF_VAULT_TOKEN": "${TUF_VAULT_TOKEN}",
    "INFLUXDB_HOST": "${INFLUXDB_HOST}",
    "INFLUXDB_PORT": "${INFLUXDB_PORT}"
  },
  "healthChecks": [{
    "protocol": "HTTP",
    "path": "/health",
    "intervalSeconds": 30
  }],
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0,
    "expungeAfterSeconds": 0
  }
}]
